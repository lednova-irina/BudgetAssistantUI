name: Assistants. Budget - Ops

on:
  # push:
  #   branches: ["develop"]
  #   paths:
  #     - "assistants-budget-ops/**"
  #     - "!**/README.md"
  #     - "!**/gitignore"
  #     - "!**/.husky/**"
  #     - "!**/.vscode/**"
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options:
          - "develop"
          - "production"
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Set env ENVIRONMENT
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # terraform_version: 1.4.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: assistants-budget-ops

      - name: Terraform Init
        id: init
        run: terraform -chdir=${{ env.ENVIRONMENT }} init -upgrade
        working-directory: assistants-budget-ops

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=${{ env.ENVIRONMENT }} validate -no-color
        working-directory: assistants-budget-ops

      - name: Terraform Plan
        id: plan
        run: |
          terraform -chdir=${{ env.ENVIRONMENT }} plan -no-color -input=false \
            -var "acm_certificate_arn=${{ secrets.AWS_ACM_CERTIFICATE_ARN }}" \
            -var "assistants_budget_ui_s3_bucket_name=${{ secrets.AWS_S3_BUDGET_UI_BUCKET }}" \
            -var "assistants_budget_ui_cloudfront_domain_name=${{ secrets.AWS_CLOUDFRONT_BUDGET_UI_DOMAIN }}" \
            -var "assistants_budget_ui_route53_hostedzone_id=${{ secrets.AWS_ROUTE53_HOSTED_ZONE_ID }}" \
            -var "assistants_budget_be_api_domain_name=${{ secrets.AWS_BE_API_DOMAIN }}" \
            -var "assistants_budget_be_api_docker_image_url=${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_BE_API }}:${{ env.ENVIRONMENT }}-latest"
        continue-on-error: true
        working-directory: assistants-budget-ops

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          terraform -chdir=${{ env.ENVIRONMENT }} apply -auto-approve -input=false \
            -var "acm_certificate_arn=${{ secrets.AWS_ACM_CERTIFICATE_ARN }}" \
            -var "assistants_budget_ui_s3_bucket_name=${{ secrets.AWS_S3_BUDGET_UI_BUCKET }}" \
            -var "assistants_budget_ui_cloudfront_domain_name=${{ secrets.AWS_CLOUDFRONT_BUDGET_UI_DOMAIN }}" \
            -var "assistants_budget_ui_route53_hostedzone_id=${{ secrets.AWS_ROUTE53_HOSTED_ZONE_ID }}" \
            -var "assistants_budget_be_api_domain_name=${{ secrets.AWS_BE_API_DOMAIN }}" \
            -var "assistants_budget_be_api_docker_image_url=${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY_BE_API }}:${{ env.ENVIRONMENT }}-latest"
        working-directory: assistants-budget-ops
